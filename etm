#!/usr/bin/env bash


function help {
    description
    usage
    commands
    options
    notes
    examples
    advanced_examples
    exit 0
}


function description {
    #     -------------------------------------------------------------------------------
    echo -e "\033[1mEpitope Matcher\033[0m"
    echo "A package that can be used to find out how well the epitopes in a patient's"
    echo "virus' will be recognized by the HLA's present in the patient."
    echo ""
}


function usage {
    #     -------------------------------------------------------------------------------
    echo "Usage:"
    echo "   etm -h | --help"
    echo "   etm info"
    echo "   etm build [--image]"
    echo "   etm run [--image] [--env] [--publish] [--entrypoint] <command>"
    echo "   etm rcommand [--image] [--env] [--publish] <command>"
    echo "   etm rscript [--image] [--env] [--publish] <path>"
    echo "   etm serve [--image] [--env] [--publish]"
    echo "   etm get-test-set [--image] [--env]"
    echo ""
}


function commands {
    #     -------------------------------------------------------------------------------
    echo "Commands:"
    echo "   build                       Build container image"
    echo "   run                         Run containerized command against entrypoint"
    echo "   rcommand                    Run containerized R command"
    echo "   rscript                     Run containerized R script"
    echo "   serve                       Serve web application"
    echo "   get-test-set                Download test set to ${project_dir}"
    echo "   info                        Print information about environment"
    echo ""
}


function options {
    #     -------------------------------------------------------------------------------
    echo "Options:"
    echo "   -h --help                   Show this screen"
    echo "   -i --image=<name:tag>       [Not Available] Image [default: ${default_image}]"
    echo "   -p --publish=<host:guest>   [Not Available] Port forward [default: ${default_port_forward}]"
    echo "   -e --env=<key:val>          [Not Available] Environment"
    echo "   --entrypoint=<path>         [Not Available] Entrypoint [default: ${default_entrypoint}]"
    echo ""
}


function notes {
    #     -------------------------------------------------------------------------------
    echo "Notes:"
    echo "   - To run from any location, symlink ${repo_dir}/etm to a directory on your PATH"
    echo "   - Files are only accessible from ${project_dir} down"
    echo ""
}


function examples {
    #     -------------------------------------------------------------------------------
    echo "Examples:"
    echo "   etm build"
    echo "   [Not Available] etm run --entrypoint sh -c 'echo Hello World!'"
    echo "   etm rcommand 'print(\"Hello World!\"); print(\"Hello World again!\");'"
    echo "   etm rscript hello-world.r"
    echo "   etm serve"
    echo "   etm get-test-set"
    echo "   etm info"    
    echo ""
}


function advanced_examples {
    #     -------------------------------------------------------------------------------
    echo "Advanced Examples:"
    echo "   [Not Available] etm build -i etm-dev:0.01a"
    echo "   [Not Available] etm run -i etm-dev:0.01a -e name=World --entrypoint sh -c 'echo Hello \${name}!'"
}


function build {
    cd "${repo_dir}/docker"
    docker build -t "${default_image}" .
}


function run {
    docker run --rm --user $(id -u):$(id -g) -it -p "${default_port_forward}" \
        --workdir "${project_dir}" -v "${project_dir}:${project_dir}" \
        --entrypoint "${default_entrypoint}" "${default_image}" "$@"
}


function info {
    echo -e "\033[1mEpitope Matcher Information\033[0m"
    echo "repo_dir: ${repo_dir}"
    echo "project_dir: ${project_dir}"
    echo "default_image: ${default_image}"
    echo "default_port_forward: ${default_port_forward}"
    echo "default_entrypoint: ${default_entrypoint}"
}


function resolve_repo {
    ## Copied from https://stackoverflow.com/a/697552/1782641
    SELF_PATH=$(cd -P -- "$(dirname -- "$0")" && pwd -P) && SELF_PATH=$SELF_PATH/$(basename -- "$0")
    while [[ -h $SELF_PATH ]]; do
        DIR=$(dirname -- "$SELF_PATH")
        SYM=$(readlink "$SELF_PATH")
        SELF_PATH=$(cd "$DIR" && cd "$(dirname -- "$SYM")" && pwd)/$(basename -- "$SYM")
    done
    echo "$(dirname ${SELF_PATH})"
}


## ETM Global variables 
repo_dir="$(resolve_repo)"
project_dir="$(pwd)"
default_image="etm:latest"
default_host_port=5436
default_container_port=5436
default_port_forward="${default_host_port}:${default_container_port}"
default_entrypoint="Rscript"
  
case "$1" in
    -h | --help)
    help
    ;;

    build)
    build
    ;;
         
    run)
    shift
    run "$*"
    ;;

    rcommand)
    shift
    run -e "$*"
    ;;

    rscript)
    shift
    run "$*"
    ;;

    serve)
    run -e "library(EpitopeMatcher); run_EpitopeMatcher_app();"
    ;;

    get-test-set)
    run -e "library(EpitopeMatcher); get_set_of_test_data();"
    ;;

    info)
    info
    ;;

    *)
    echo "\`$0 $@\` is an invalid command, see usage below"
    echo ""
    usage
    exit 1
    ;;

esac
